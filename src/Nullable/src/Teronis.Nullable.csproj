<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>

    <TargetFrameworks>netstandard1.0;net20;netstandard2.0;net40;netstandard2.1;net5.0</TargetFrameworks>
    <RootNamespace>System.Diagnostics.CodeAnalysis</RootNamespace>
    <!-- Handled by root Directory.Build.props -->
    <!--<LangVersion>8.0</LangVersion>-->
    <!-- Handled by root Directory.Build.props -->
    <!--<Nullable>enable</Nullable>-->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <!-- Prevent any kind of magic. -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <!-- See at section "THIS IS FOR TERONIS.DOTNET" below. -->
    <!--<GenerateAssemblyInfo>false</GenerateAssemblyInfo>-->

    <!-- 
      Get rid of:
        Some target frameworks declared in the dependencies group of the nuspec and the lib/ref 
        folder do not have exact matches in the other location. Consult the list of actions below:
        - Add lib or ref assemblies for the net20 target framework- Add lib or ref assemblies for the net40 target framework
        - Add lib or ref assemblies for the netstandard1.0 target framework
        - Add lib or ref assemblies for the net5.0 target framework
        - Add lib or ref assemblies for the netstandard2.0 target framework
        - Add lib or ref assemblies for the netstandard2.1 target framework
    -->
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>

    <!-- Do not introduce our package as transient dependency. -->
    <DevelopmentDependency>true</DevelopmentDependency>
    <!-- Do not add build output to package. -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- Handled by root Directory.Build.props -->
    <!--<IncludeSymbols>false</IncludeSymbols>-->

  </PropertyGroup>

  <ItemGroup>
    <NonCSPPFiles Remove="Properties\AssemblyInfo.cs" />
  </ItemGroup>

  <!-- THIS AREA IS FOR DEVELOPMENT -->

  <ItemGroup>
    <!-- Let's add them all, but do no compile. -->
    <None Include="@(NonCSPPFiles)" />
  </ItemGroup>

  <!-- Now compile them dependent on framework. -->

  <Choose>

    <When Condition="'$(TargetFramework)' == 'netstandard1.0'">
      <ItemGroup>
        <Compile Include="@(NetStandard1_0CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <When Condition="'$(TargetFramework)' == 'net20'">
      <ItemGroup>
        <Compile Include="@(Net20CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <When Condition="'$(TargetFramework)' == 'netstandard2.0'">
      <ItemGroup>
        <Compile Include="@(NetStandard2_0CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <When Condition="'$(TargetFramework)' == 'netstandard1.0'">
      <ItemGroup>
        <Compile Include="@(NetStandard1_0CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <When Condition="'$(TargetFramework)' == 'net40'">
      <ItemGroup>
        <Compile Include="@(Net40CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <When Condition="'$(TargetFramework)' == 'netstandard2.1'">
      <ItemGroup>
        <Compile Include="@(NetStandard2_1CompliantNonCSPPFiles)" />
      </ItemGroup>
    </When>

    <Otherwise>
      <!-- We simply do nothing. -->
    </Otherwise>

  </Choose>

  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>

  <!-- THIS AREA IS FOR PACKAGE CREATION -->

  <ItemGroup>
    <Content Include="@(NetStandard1_0CompliantNonCSPPFiles->'%(CSPPFilePath)')">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/netstandard1.0;content/netstandard1.0</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="@(Net20CompliantNonCSPPFiles->'%(CSPPFilePath)')">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/net20;content/net20</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="@(NetStandard2_0CompliantNonCSPPFiles->'%(CSPPFilePath)')">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/netstandard2.0;content/netstandard2.0</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="@(Net40CompliantNonCSPPFiles->'%(CSPPFilePath)')">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/net40;content/net40</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="@(NetStandard2_1CompliantNonCSPPFiles->'%(CSPPFilePath)')">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/netstandard2.1;content/netstandard2.1</PackagePath>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Content Include="C:\Users\christoph\source\repos\Teronis.DotNet\src\Nullable\src\content\_._">
      <Pack>true</Pack>
      <PackagePath>contentFiles/cs/net5.0;content/net5.0</PackagePath>
    </Content>
  </ItemGroup>

  <!-- THIS IS FOR TERONIS.DOTNET -->

  <!-- 
    It is by default true, but for documentation:
      We use assembly info autogeneration to generate
      InternalsVisibleTo for each project in Teronis.DotNet.sln.
      So we are eligable to use this project as project reference.
      
      Just a thought but important: We could allow that this
      project reference is picked up as NuGet-dependency in
      .nuspec file of package of project references that use
      this project because we publish this project as package
      too. But such a small library is not worth to be listed
      as NuGet-dependency. It has only ~10kb.
  -->
  <PropertyGroup>
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
  </PropertyGroup>

</Project>
